/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the TemplateLink class.
 * @constructor
 * Entity representing the reference to the template.
 * @member {string} uri URI referencing the template.
 * 
 * @member {string} [contentVersion] If included it must match the
 * ContentVersion in the template.
 * 
 */
function TemplateLink(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.uri !== undefined) {
      this.uri = parameters.uri;
    }
    if (parameters.contentVersion !== undefined) {
      this.contentVersion = parameters.contentVersion;
    }
  }    
}


/**
 * Validate the payload against the TemplateLink schema
 *
 * @param {JSON} payload
 *
 */
TemplateLink.prototype.serialize = function () {
  var payload = {};
  if (this['uri'] === null || this['uri'] === undefined || typeof this['uri'].valueOf() !== 'string') {
    throw new Error('this[\'uri\'] cannot be null or undefined and it must be of type string.');
  }
  payload['uri'] = this['uri'];

  if (this['contentVersion'] !== null && this['contentVersion'] !== undefined) {
    if (typeof this['contentVersion'].valueOf() !== 'string') {
      throw new Error('this[\'contentVersion\'] must be of type string.');
    }
    payload['contentVersion'] = this['contentVersion'];
  }

  return payload;
};

/**
 * Deserialize the instance to TemplateLink schema
 *
 * @param {JSON} instance
 *
 */
TemplateLink.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['uri'] !== undefined) {
      this['uri'] = instance['uri'];
    }

    if (instance['contentVersion'] !== undefined) {
      this['contentVersion'] = instance['contentVersion'];
    }
  }

  return this;
};

module.exports = TemplateLink;
