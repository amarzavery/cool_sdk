/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the PolicyDefinition class.
 * @constructor
 * Policy definition.
 * @member {string} [name] Gets or sets the policy definition name.
 * 
 * @member {string} [description] Gets or sets the policy definition
 * description.
 * 
 * @member {string} [displayName] Gets or sets the policy definition display
 * name.
 * 
 * @member {object} [policyRule] The policy rule json.
 * 
 */
function PolicyDefinition(parameters) {
  PolicyDefinition['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.description !== undefined) {
      this.description = parameters.description;
    }
    if (parameters.displayName !== undefined) {
      this.displayName = parameters.displayName;
    }
    if (parameters.policyRule !== undefined) {
      this.policyRule = parameters.policyRule;
    }
  }    
}

util.inherits(PolicyDefinition, models['BaseResource']);

/**
 * Validate the payload against the PolicyDefinition schema
 *
 * @param {JSON} payload
 *
 */
PolicyDefinition.prototype.serialize = function () {
  var payload = PolicyDefinition['super_'].prototype.serialize.call(this);
  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['name'] = this['name'];
  }

  if (this['description'] !== null && this['description'] !== undefined) {
    if (typeof this['description'].valueOf() !== 'string') {
      throw new Error('this[\'description\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['description'] = this['description'];
  }

  if (this['displayName'] !== null && this['displayName'] !== undefined) {
    if (typeof this['displayName'].valueOf() !== 'string') {
      throw new Error('this[\'displayName\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['displayName'] = this['displayName'];
  }

  if (this['policyRule'] !== null && this['policyRule'] !== undefined) {
    if (typeof this['policyRule'] !== 'object') {
      throw new Error('this[\'policyRule\'] must be of type object.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['policyRule'] = this['policyRule'];
  }

  return payload;
};

/**
 * Deserialize the instance to PolicyDefinition schema
 *
 * @param {JSON} instance
 *
 */
PolicyDefinition.prototype.deserialize = function (instance) {
  PolicyDefinition['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['name'] !== undefined) {
      this['name'] = instance['name'];
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['description'] !== undefined) {
        this['description'] = instance['properties']['description'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['displayName'] !== undefined) {
        this['displayName'] = instance['properties']['displayName'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['policyRule'] !== undefined) {
        this['policyRule'] = instance['properties']['policyRule'];
      }
    }
  }

  return this;
};

module.exports = PolicyDefinition;
